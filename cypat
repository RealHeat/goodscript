#!/bin/bash

#  ____ _     ____  ____  ________  _
# /   _Y \ /|/  _ \/  __\/    /\  \//
# |  / | |_||| / \||  \/||  __\ \  / 
# |  \_| | ||| |-|||    /| |    /  \ 
# \____|_/ \|\_/ \|\_/\_\\_/   /__/\\
                                   
permcheck () {
for file in $1/*; do
    perm=$(stat -c "%A" "$file")

    owner=${perm:1:3}
    group=${perm:4:3}
    other=${perm:7:3}

    describe_perms() {
        	p=$1
        	desc=""
        	[[ $p == *r* ]] && desc+="read "
        	[[ $p == *w* ]] && desc+="write "
        	[[ $p == *x* ]] && desc+="execute "
        	[[ -z $desc ]] && desc="none"
        	echo "$desc"
    	}	

    	echo "$file:"
    	echo "  Owner:  $(describe_perms "$owner")"
    	echo "  Group:  $(describe_perms "$group")"
    	echo "  Others: $(describe_perms "$other")"
    	echo
	
done
}
# remove any password file made here
echo 'permission check?'
read input
if [[ "$input" == "yes" ]]; then
	unset input
	echo 'please name directory'
	read input
	permcheck $input
fi
unset input	
rm -f /password

# exclude the main user for password changing
echo '------------------------'
echo "please state the main user"
read input
mstr='G$YB4LLZ_3R3KT1le_d7sf0nct10n'
awk -F: -v mstr="$mstr" '/\/home/ {print $1 ":" mstr}' /etc/passwd >> /password
sed -i "/$input/d" /password
unset input

# using chpasswd to change all passwords

echo -e "\nHere is the list of changes to append to passwords:"
cat /password
echo -e "Apply?\n"
read input

if [[ "$input" == "yes" ]]; then
	echo "changing passwords..."
	chpasswd < /password
	echo "done"
else
echo "no passwords changed"
fi
unset input
echo '------------------------'
# system update

echo "Start system update?"
read input
if [[ "$input" == "yes" ]]; then
	apt-get update
	apt-get upgrade

fi
echo '------------------------'
unset input

# enable firewall
echo 'turning on firewall...'
ufw enable

# turn off root login ssh
echo 'in /etc/ssh/sshd_config'
echo 'turning off root login for SSH'
sed -i 's/PermitRootLogin yes/PermitRootLogin no/g' /etc/ssh/sshd_config

# password expiration policies

echo 'in /etc/login.defs'
echo 'setting password expiration max to 90'
sed -i '/PASS_MAX_DAYS/c\PASS_MAX_DAYS 90' /etc/login.defs

echo 'setting password expiration minimum to 7'
sed -i '/PASS_MIN_DAYS/c\PASS_MIN_DAYS 7' /etc/login.defs

echo 'setting password expiration warning to 14'
sed -i '/PASS_WARN_AGE/c\PASS_WARN_AGE 14' /etc/login.defs

echo 'in /etc/pam.d/common-password'
echo 'setting minimum length in common-password'
echo 'setting remember in common-password'
sed -i '/pam_unix.so/s/$/ minlen=8 remember=5/' /etc/pam.d/common-password

# enabling syncookies

echo 'in /etc/sysctl.conf'
echo 'enabling syncookies'
sed -i '/net.ipv4.tcp_syncookies=0/c\net.ipv4.tcp_syncookies=1' /etc/sysctl.conf

# common-auth nullok remove that shit

echo 'in /etc/pam.d/common-auth'
echo 'setting null passwords to not authenticate'
sed 's/nullok//g' /etc/pam.d/common-auth
